{"version":3,"sources":["Schema/NetworkFoundation.js","App.js","index.js"],"names":["Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","dicEN","createMap","error","en","errors","labels","richText","widget","titles","editModalStyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","tEN","makeTranslator","combineSchema","require","values","networks","Generator","copyIconText","React","useState","showValidity","createStore","createOrderedMap","store","setStore","schema","modalOpen","setModalOpen","copyIcon","setCopyIcon","generatedJSON","JSON","stringify","valuesToJS","undefined","onChange","useCallback","storeKeys","scopes","updater","deleteOnEmpty","type","storeUpdater","Fragment","Grid","container","item","xs","Tooltip","title","IconButton","onClick","onClose","navigator","clipboard","writeText","Modal","open","aria-labelledby","aria-describedby","Box","sx","TextField","id","variant","value","multiline","fullWidth","minRows","maxRows","disabled","window","document","location","pathname","UIStore","UIRootRenderer","Foundations","UIMeta","widgets","t","PageMain","className","Typography","component","Container","maxWidth","fixed","style","margin","NetworkFoundation","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d259ae41.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n    createStore, createMap, createOrderedMap,\r\n    storeUpdater,\r\n\r\n} from \"@ui-schema/ui-schema\";\r\n\r\nimport {\r\n    TextField,\r\n} from '@material-ui/core'\r\n\r\nimport { Modal, Box, Grid, Paper, styled } from '@mui/material';\r\n\r\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nimport { UIStoreProvider } from '@ui-schema/ui-schema/UIStore';\r\nimport { UIMetaProvider } from '@ui-schema/ui-schema/UIMeta';\r\nimport { UIRootRenderer } from '@ui-schema/ui-schema/UIRootRenderer';\r\nimport { makeTranslator } from \"@ui-schema/ui-schema/Translate/makeTranslator\";\r\nimport { widgets } from \"@ui-schema/ds-material\";\r\nimport { en } from '@ui-schema/dictionary'\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst dicEN = createMap({\r\n    error: en.errors,\r\n    labels: { ...en.labels, ...en.richText },\r\n    widget: {}, // overwrite single widget translations\r\n    titles: {}, // overwrite specific titles all the time (no matter in which widget)\r\n});\r\n\r\nconst editModalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\n\r\nconst tEN = makeTranslator(dicEN, 'en');\r\n\r\nconst networksSchema = require(\"./resolved.schema.json\")\r\nconst combineSchema = {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"networks\": networksSchema\r\n    }\r\n};\r\n\r\nconst values = { networks: [] };\r\n\r\nconst Generator = () => {\r\n    // eslint-disable-next-line \r\n    const [showValidity, setShowValidity] = React.useState(true);\r\n\r\n    const [store, setStore] = React.useState(() => createStore(createOrderedMap(values)));\r\n\r\n    // eslint-disable-next-line \r\n    const [schema, setSchema] = React.useState(() => createOrderedMap(combineSchema));\r\n\r\n    // START JSON_VIEW\r\n    // Used to render modal overlay that displays JSON Snippet\r\n    const [modalOpen, setModalOpen] = React.useState(false);\r\n    const handleModalOpen = () => setModalOpen(true);\r\n    const handleModalClose = () => setModalOpen(false);\r\n    // STOP JSON_VIEW\r\n\r\n    // START COPY_JSON\r\n    const [copyIcon, setCopyIcon] = React.useState(false);\r\n    const handleCopyIconClick = () => setCopyIcon(true);\r\n    const handleCopyIconClose = () => setCopyIcon(false);\r\n\r\n    let copyIconText\r\n    if (!copyIcon) {\r\n        copyIconText = \"Copy Generated JSON\"\r\n    } else {\r\n        copyIconText = \"Generated JSON Copied!!\"\r\n    }\r\n\r\n    const generatedJSON = JSON.stringify(store.valuesToJS().networks, undefined, 2)\r\n    // STOP COPY_JSON\r\n\r\n    const onChange = React.useCallback((storeKeys, scopes, updater, deleteOnEmpty, type) => {\r\n        setStore(storeUpdater(storeKeys, scopes, updater, deleteOnEmpty, type))\r\n    }, [setStore])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Item>\r\n                        <Tooltip title=\"View Generated JSON\">\r\n                            <IconButton>\r\n                                <EditIcon\r\n                                    onClick={handleModalOpen}\r\n                                />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={copyIconText}\r\n                            onClose={handleCopyIconClose}\r\n                            onClick={handleCopyIconClick}\r\n                        >\r\n                            <IconButton>\r\n                                <ContentCopyIcon\r\n                                    onClick={() => {\r\n                                        // navigator.clipboard.writeText(JSON.stringify(store.valuesToJS().networks, undefined, 2));\r\n                                        navigator.clipboard.writeText(generatedJSON);\r\n                                    }}\r\n                                />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Modal\r\n                            open={modalOpen}\r\n                            onClose={handleModalClose}\r\n                            aria-labelledby=\"modal-modal-title\"\r\n                            aria-describedby=\"modal-modal-description\"\r\n                        >\r\n                            <Box sx={editModalStyle}>\r\n                                <TextField\r\n                                    id=\"generated_json\"\r\n                                    variant=\"filled\"\r\n                                    value={generatedJSON}\r\n                                    multiline\r\n                                    fullWidth\r\n                                    minRows={10}\r\n                                    maxRows={25}\r\n                                    disabled\r\n                                />\r\n                            </Box>\r\n                        </Modal>\r\n                        <Tooltip title=\"Network Foundation Documentation\">\r\n                            <IconButton>\r\n                                <MenuBookIcon\r\n                                    onClick={() => window.open(document.location.pathname + \"/documentation\", \"_blank\")}\r\n                                />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Item>\r\n                        <UIStoreProvider\r\n                            store={store}\r\n                            onChange={onChange}\r\n                            showValidity={showValidity}\r\n                        >\r\n                            <UIRootRenderer schema={schema} />\r\n                        </UIStoreProvider>\r\n                    </Item>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\n\r\nconst Foundations = () => {\r\n    return <UIMetaProvider widgets={widgets} t={tEN}>\r\n        <Generator />\r\n    </UIMetaProvider>\r\n}\r\n\r\n\r\nexport default Foundations","\r\nimport React from 'react';\r\nimport './App.css';\r\n\r\nimport { Typography, Paper, Container } from \"@mui/material\";\r\n\r\n\r\nimport NetworkFoundation from \"./Schema/NetworkFoundation\";\r\n\r\nfunction PageMain() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <Typography component={'h1'} variant={'h6'}>\r\n                    Network Foundation JSON Generator\r\n                </Typography>\r\n            </header>\r\n            <Container className=\"App-main\" maxWidth={'md'} fixed>\r\n                <Paper style={{ margin: 12, padding: 24 }}>\r\n                    <NetworkFoundation />\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageMain;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}